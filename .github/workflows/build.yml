name: Build

on:
  workflow_dispatch:

run-name: Build

jobs:
  rootfs:
    runs-on: self-hosted
    container:
      image: ubuntu:24.04
    name: Build rootfs
    strategy:
        matrix:
          flavor:
            - server
          suite:
            - noble
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: LizardByte/setup-python-action@master
        with: python-version: '2.7'

      - name: Install dependencies
        shell: bash
        run: |
          apt-get update && apt-get purge needrestart -y && apt-get upgrade -y
          apt-get install -y git build-essential gcc-aarch64-linux-gnu bison \
          u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python3 python3-pip \
          python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
          python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools \
          && python3 -m pip install --upgrade pip setuptools

      - name: Checkout LFS
        shell: bash
        run: git lfs fetch && git lfs checkout

      - name: Build
        shell: bash
        run: ./build.sh --suite=${{ matrix.suite }} --flavor=${{ matrix.flavor }} --rootfs-only

      - name: Upload
        uses: actions/upload-artifact@v4.3.3
        with:
            name: ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64-rootfs
            path: ./build/ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64.rootfs.tar.xz
            if-no-files-found: error

  kernel:
    runs-on: self-hosted
    container:
      image: ubuntu:24.04
    name: Build kernel 
    strategy:
        matrix:
          suite:
            - noble
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          apt-get update && apt-get purge needrestart -y && apt-get upgrade -y
          apt-get install -y git build-essential gcc-aarch64-linux-gnu bison \
          u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python3 python3-pip \
          python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
          python3-pkg-resources swig libfdt-dev libpython3-dev \
          && python3 -m pip install --upgrade pip setuptools
          
      - name: Checkout LFS
        shell: bash
        run: git lfs fetch && git lfs checkout

      - name: Build
        shell: bash
        run: ./build.sh --suite=${{ matrix.suite }} --kernel-only

      - name: Upload
        uses: actions/upload-artifact@v4.3.3
        with:
            name: linux-rockchip-${{ matrix.suite == 'jammy' && '5.10' || matrix.suite == 'noble' && '6.1' }}
            path: ./build/linux-*.deb
            if-no-files-found: error

  build:
    runs-on: self-hosted
    container:
      image: ubuntu:24.04
    needs: [rootfs, kernel]
    name: Build image 

    strategy:
      matrix:
        board:
          - radxa-zero3
        flavor:
          - server
        suite:
          - noble

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          apt-get update && apt-get purge needrestart -y && apt-get upgrade -y
          apt-get install -y git build-essential gcc-aarch64-linux-gnu bison \
          u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python3 python3-pip \
          python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
          python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools \
          && python3 -m pip install --upgrade pip setuptools

      - name: Checkout LFS
        shell: bash
        run: git lfs fetch && git lfs checkout

      - name: Checkout rootfs
        uses: actions/download-artifact@v4.1.2
        with:
            name: ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64-rootfs
            path: ./build/

      - name: Checkout kernel
        uses: actions/download-artifact@v4.1.2
        with:
            name: linux-rockchip-${{ matrix.suite == 'jammy' && '5.10' || matrix.suite == 'noble' && '6.1' }}
            path: ./build/

      - name: Build
        shell: bash
        run: ./build.sh --board=${{ matrix.board }} --suite=${{ matrix.suite }} --flavor=${{ matrix.flavor }}

      - name: Upload
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64-${{ matrix.board }}
          path: ./images/ubuntu-*-preinstalled-${{ matrix.flavor }}-arm64-${{ matrix.board }}.*
          if-no-files-found: error

      - name: Clean cache
        shell: bash
        run: sync && rm -rf ./images/ ./build/ && sync
